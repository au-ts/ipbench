.TH "ipbenchd" "1" "Mar 2024" "Ian Wienand, Matthew Rossouw, Peter Chubb, Christopher Irving" ""
.SH "NAME"
.LP 
ipbenchd \- Client daemon for the ipbench testing suite
.SH "SYNTAX"
.LP 
ipbenchd [\fB\-i\fR <\fIip\fP>|\fB\-\-ip\fP=<\fIip\fP>]
[\fB\-p\fR <\fIport\fP>|\fB\-\-port\fP=<\fIport\fP>]
[\fB\-t\fP|\fB\-\-target\fP] [\fB\-d\fP|\fB\-\-debug\fP]
.br
ipbenchd \fB\-h\fP|\fB\-\-help\fR
.br
ipbenchd \fB\-\-version\fP
.SH "DESCRIPTION"
.LP 
This program is the client portion of the ipbench testing suite.  Each client must be running this daemon to receive commands from the controlling node. The daemon must be run as root to allow access to ports. It also does not fork into a separate process automatically. So you may want to run something like
.LP
.B sudo /usr/bin/ipbenchd &
.LP
to run the daemon in the background.
.br
This daemon can also be used as the target portion of the testing suite, by running it with \fB\-t\fR
.LP
For more on the structure of the ipbench testing suite, see the man page for ipbench(1)
.SH "OPTIONS"
.LP 
.TP 
\fB\-\-version\fR
Show the program's version number and exit.
.TP 
\fB\-h\fP|\fB\-\-help\fR
Output help information.
.TP 
\fB\-i\fR <\fIip\fP>|\fB\-\-ip\fP=<\fIip\fP>
Makes the daemon bind to the specified \fIip\fP. Default is to bind to all available ip addresses.
.TP 
\fB\-p\fR <\fIport\fP>|\fB\-\-port\fP=<\fIport\fP>
Makes the daemon listen on the specified \fIport\fP.
.TP 
\fB\-d\fP|\fB\-\-debug\fR
Enable debugging; provide verbose output.
.TP 
\fB\-t\fP|\fB\-\-target\fR
Put the daemon in target mode
.SH "COMMUNICATING WITH IPBENCHD"
.LP
By sending messages to the port ipbenchd is listening on (e.g. using telnet) you
can issue commands to ipbenchd. The available commands are listed here.

.TP
.B
HELP
.br
Prints a list of all ipbenchd commands.
.TP
.B
HELLO
.br
Prepare ipbenchd to run a new test.
.TP
.B
LOAD <test-name>
.br
Specify which test will be run.
.TP
.B
SETUP
.br
There are two versions of the setup command, based on whether ipbenchd is
running in client mode or target mode. In client mode, SETUP must be run
.LP
\fBSETUP\fP target::<test-target>||port::<test-port>||args::<test-args>
.br
This passes the target, port on the target, and arguments for the
test in question to use. In target mode, SETUP must be run
.LP
\fBSETUP\fP args::<target-test-args>
.br
Only the arguments to the target test are needed, since target
tests do not involve other machines.
.TP
.B
START
.br
Begins running the test which has been configured.
.TP
.B
STOP
.br
Ends the currently running test. This command only exists in target mode;
in client mode a test will finish based on performing certain tasks
such as sending a specific number of packets to the target. But in target
mode the test will simply keep running until ordered to stop with this command.
.TP
.B
ABORT
.br
If ipbenchd is currently running a test, end the test immediately without
processing data and return to ready state so another test can be configured and run.
This command is useful if a previous test failed unexpectedly and ipbenchd
has been left unable to accept new tests.
.TP
.B
STATUS
.br
Show the status of ipbenchd.
.TP
.B
QUIT
.br
Close the connection to ipbenchd.


.SH "FILES"
.LP 
(none)
.SH "ENVIRONMENT VARIABLES"
.LP 
(none)
.SH "EXAMPLES"
.LP 
examples
.SH "AUTHORS"
.LP 
ipbenchd by Ian Wienand <ianw@gelato.unsw.edu.au>,
.br
Matthew Rossouw <matthew.rossouw@unsw.edu.au>,
.br
Peter Chubb <peter.chubb@unsw.edu.au>.
.br
Man page by Christopher Irving <c.irving@unsw.edu.au>.
.SH "SEE ALSO"
.LP 
ipbench(1)
